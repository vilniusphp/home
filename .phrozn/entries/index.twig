# vim:ft=yaml
layout: index.twig

pageName: index
place:
    name: "HQ Ovoko"
    address: Žirmūnų g.70-701
    mapurl: "https://goo.gl/maps/gxag3uan4gUgAs41A"

afterparty:
    name: "HQ Ovoko"
    address: Žirmūnų g.70-701
    mapurl: "https://goo.gl/maps/gxag3uan4gUgAs41A"

### EVENT TEMPLATE
#
#    - name: "Susitikimas XXX"
#      date: 2015-06-05 19:00
#      facebook:
#      ligtingTalks: true
#      masterTopic:
#      sponsor:
#        - name:
#          url:
#          logo:
#      speakers:
#        - name:
#          title:
#          description:
#          linkedin:
#        - name:
#          title:
#          description:
#          linkedin:
#        - name:
#          title:
#          description:
#          linkedin:
events:
    - name: "VilniusPHP 0x92"
      date: 2024-12-05 19:00
      facebook: https://www.meetup.com/vilniusphp/events/304753080/
      ligtingTalks: false
      speakers:
        - name: "Rokas Muningis"
          title: "The Power of AST"
          description: |
            As software engineers, our innate curiosity drives us to explore and understand. We've all been there - seeing an 'unwritten rule' comment on a merge request. Think about static analysis, syntax highlighting, linters, transpilers and interpreters - did you know they're all doing the same first step? They take our code and build this tree of connected nodes. It's what they do next that makes them different. Custom linter rules are often where we first put this knowledge to work. Those 'unwritten rules' in the codebase? They become automated checks, catching issues before they even reach a merge request. And who knows, maybe this will inspire you to write your own tiny programming language!
            (Presented in English)
        - name: "Marco Rosello and Edvardas Kazlauskas (Boozt)"
          title: "Microservices vs monolith: which and why?"
          description: |
            As technology advances and the business grows, it’s important to consider the pros and cons of different infrastructure architectures. Boozt engineering systems architecture is built using both a microservice and monolithic approach - a hot topic of debate for Boozt’s two directors Marco Rosello and Edvardas Kazlauskas.
            (Presented in English)
